{
  "name": "Bingoh's blog",
  "tagline": "渐行渐远·Never give up",
  "body": "# 双飞翼布局和圣杯布局\r\n双飞翼布局源自淘宝UED，圣杯布局来自2006年 Matthew Levine 的一篇文章，目的都是为了实现三列布局（中间列自适应宽度，两边分别固定宽度），并且中间列优先加载。两种布局的原理可以应用到两列布局中。\r\n\r\n开始之前说一个翻译问题，圣杯布局作者提到发明圣杯布局前的其中一个需求：`allow any column to be the tallest`\r\n这里应该翻译为：允许任意列高度是最高的，而不是“允许任意列（在 HTML 中位置）在最高”。\r\n\r\n相同点：\r\n* 都让三列布局左浮动\r\n* 实现三列布局\r\n* 中间列优先加载\r\n* 左右两列顺序不影响布局\r\n\r\n异同点：\r\n* 圣杯布局利用布局父元素 container 左右 padding 出边距给予左右两列的空间放置，左右两列则通过 position 和margin 负边距插入到自身的位置。\r\n* 双飞翼布局直接在 container 加入一个 div 包裹住中间列，同时该 div 浮动，而被包裹住的中间列则 margin 左右为左右两列布局留出空白，这样做省了多个 CSS 属性（position，左右两列的 margin 负边距，container 的 padding 属性，左右两列的 left 或 right 属性），但是双飞翼则多了一个 div 标签。\r\n* 圣杯布局在 IE 6/7 下需要加入 hack 解决一个布局问题，双飞翼布局则不用。\r\n\r\n在我看来我更喜欢双飞翼布局，用一个 div 标签换来减少多个属性和一个 hack 属性（在 IE 6/7 下圣杯布局需要加入 hack，但是如果 container 触发了 BFC 则该 hack 不用加入，例如 container 使用了 clearfix 或 overflow: hidden）。圣杯布局下需要加入的 hack 是左边的列的 left 属性必须是右边列的宽度的值，在正常浏览器布局下 left 属性的值则是自身的宽度的负值，这里提一个现象，在实现圣杯布局的时候我使用了 clearfix 闭合浮动而不是圣杯布局来源文章中的使用 footer 来清除浮动，导致在 IE 6/7 下会出现的异常布局消失了，我估计是触发了 BFC 的原因（我把 clearfix 去掉后使用了 overflow: hidden 出现同样的效果）。\r\n\r\n## 1.双飞翼布局\r\n\r\n演示地址：http://www.libinhong.com/demo/Flying\r\n\r\n### CSS：\r\n```css\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n}\r\n\r\n.fl {\r\n    float: left;\r\n    height: 300px;\r\n}\r\n\r\n.container-center {\r\n    width: 100%;\r\n}\r\n\r\n.container-center .center {\r\n    margin: 0 200px;\r\n    height: 100%;\r\n    background-color: rgb(143, 221, 172);\r\n}\r\n\r\n.container .left {\r\n    width: 200px;\r\n    margin-left: -100%;\r\n    background: rgb(205, 228, 128);\r\n}\r\n\r\n.container .right {\r\n    width: 200px;\r\n    margin-left: -200px;\r\n    background-color: rgb(94, 152, 185);\r\n}\r\n\r\n.clearfix:before, .clearfix:after {\r\n    content: \"\";\r\n    display: table;\r\n}\r\n.clearfix:after {\r\n    clear: both;\r\n}\r\n.clearfix {\r\n    *zoom: 1;\r\n}\r\n```\r\n\r\n### HTML：\r\n```HTML\r\n<div class=\"container clearfix\">\r\n    <div class=\"container-center fl\">\r\n        <div class=\"center\">中间自适应</div>\r\n    </div>\r\n    <div class=\"left fl\">左边固定200px</div>\r\n    <div class=\"right fl\">右边固定200px</div>\r\n</div>\r\n```\r\n## 2.圣杯布局\r\n\r\n演示地址：http://www.libinhong.com/demo/HolyGrails\r\n\r\n### CSS：\r\n```css\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n}\r\n\r\n.fl {\r\n    float: left;\r\n    height: 300px;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    padding: 0 200px 0 150px;\r\n}\r\n\r\n.container .center {\r\n    width: 100%;\r\n    background-color: rgb(166, 212, 121);\r\n}\r\n.container .left {\r\n    width: 150px;\r\n    margin-left: -100%;\r\n    left: -150px;\r\n    /**left: 200px;*/  /** for IE6/7*/*/\r\n    background-color: rgb(136, 204, 194);\r\n}\r\n\r\n.container .right {\r\n    width: 200px;\r\n    margin-right: -200px;\r\n    background-color: rgb(228, 215, 92);\r\n}\r\n\r\n.clearfix:before, .clearfix:after {\r\n    content: \"\";\r\n    display: table;\r\n}\r\n.clearfix:after {\r\n    clear: both;\r\n}\r\n.clearfix {\r\n    *zoom: 1;\r\n}\r\n```\r\n### HTML：\r\n```HTML\r\n<div class=\"container clearfix\">\r\n    <div class=\"center fl\">中间自适应</div>\r\n    <div class=\"left fl\">左边固定150px</div>\r\n    <div class=\"right fl\">右边固定200px</div>\r\n</div>\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}